// real main function that implements writing to all potentiometers
// this main function must include the STM32CubeIDE autogenerated code 
// the autogenerated code was left out for readability

/*user defined includes*/
#include "MuxedPots.hpp"
#include "weights.hpp"

int main(){
    // --- Initialize the CS pin ---
      MuxedPots pot(&hspi1, GPIOA, GPIO_PIN_0); //initializes the CS pin
      pot.shutdownAll(); //reset all before writing

      // --- PotSet layer 1 ---
      for(uint8_t col = 1; col < 7; col++){
          for(uint8_t row = 1; row < 13; row++){
              if(row < 10)
                  pot.setBit(100+(10*col)+row, layer1_weights[row-1][col-1]);
              else
                  pot.setBit(1000+(100*col)+row, layer1_weights[row-1][col-1]);
          }
      }

      // --- PotSet layer 2 ---
      for(uint8_t col = 1; col < 7; col++){
          for(uint8_t row = 1; row < 7; row++){
              pot.setBit(200 + 10*col + row, layer2_weights[row-1][col-1]);
          }
      }

      // --- PotSet layer 3 ---
      for(uint8_t col = 1; col < 7; col++){
          for(uint8_t row = 1; row < 7; row++){
              pot.setBit(300 + 10*col + row, layer3_weights[row-1][col-1]);
          }
      }

      // --- PotSet layer 4 ---
      for(uint8_t col = 1; col < 7; col++){
          for(uint8_t row = 1; row < 7; row++){
              pot.setBit(400 + 10*col + row, layer4_weights[row-1][col-1]);
          }
      }

      // --- PotSet layer 5 ---
      for(uint8_t col = 1; col < 3; col++){
          for(uint8_t row = 1; row < 7; row++){
              pot.setBit(500 + 10*col + row, layer3_weights[row-1][col-1]);
          }
      }
}